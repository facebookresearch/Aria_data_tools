"use strict";(self.webpackChunkstaticdocs_starter=self.webpackChunkstaticdocs_starter||[]).push([[406],{3905:(e,t,r)=>{r.r(t),r.d(t,{MDXContext:()=>l,MDXProvider:()=>m,mdx:()=>v,useMDXComponents:()=>d,withMDXComponents:()=>p});var a=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(){return i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var a in r)Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a])}return e},i.apply(this,arguments)}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,a,o=function(e,t){if(null==e)return{};var r,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=a.createContext({}),p=function(e){return function(t){var r=d(t.components);return a.createElement(e,i({},t,{components:r}))}},d=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},m=function(e){var t=d(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,n=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=d(r),m=o,u=p["".concat(n,".").concat(m)]||p[m]||f[m]||i;return r?a.createElement(u,s(s({ref:t},l),{},{components:r})):a.createElement(u,s({ref:t},l))}));function v(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,n=new Array(i);n[0]=h;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:o,n[1]=s;for(var l=2;l<i;l++)n[l]=r[l];return a.createElement.apply(null,n)}return a.createElement.apply(null,r)}h.displayName="MDXCreateElement"},48443:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>n,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var a=r(87462),o=(r(67294),r(3905));const i={sidebar_position:6,id:"aria-vrs",title:"How Project Aria Uses VRS"},n=void 0,s={unversionedId:"aria-vrs",id:"aria-vrs",title:"How Project Aria Uses VRS",description:"This website is an archive of Project Aria's first open source initiative. It still provides specific tooling and documentation for the Aria Pilot Dataset. Go to Aria VRS in Project Aria Tools for the latest VRS documentation and timestamp definitions.",source:"@site/docs/aria-vrs.mdx",sourceDirName:".",slug:"/aria-vrs",permalink:"/Aria_data_tools/docs/aria-vrs",draft:!1,editUrl:"https://github.com/facebookresearch/aria_data_tools/docs/aria-vrs.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,id:"aria-vrs",title:"How Project Aria Uses VRS"},sidebar:"tutorialSidebar",previous:{title:"Desktop Activities Capture Setup",permalink:"/Aria_data_tools/docs/pilotdata/desk/desktop_setup"},next:{title:"Getting to Know and Use VRS",permalink:"/Aria_data_tools/docs/use-vrs"}},c={},l=[],p={toc:l},d="wrapper";function m(e){let{components:t,...r}=e;return(0,o.mdx)(d,(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.mdx)("admonition",{type:"caution"},(0,o.mdx)("p",{parentName:"admonition"},"This website is an archive of Project Aria's first open source initiative. It still provides specific tooling and documentation for the Aria Pilot Dataset. Go to ",(0,o.mdx)("a",{parentName:"p",href:"https://facebookresearch.github.io/projectaria_tools/docs/data_formats/aria_vrs/aria_vrs_format"},"Aria VRS")," in Project Aria Tools for the latest VRS documentation and timestamp definitions.")),(0,o.mdx)("h1",{id:"how-project-aria-uses-vrs"},(0,o.mdx)("strong",{parentName:"h1"},"How Project Aria Uses VRS")),(0,o.mdx)("p",null,"Project Aria chose ",(0,o.mdx)("a",{parentName:"p",href:"https://facebookresearch.github.io/vrs/"},"VRS")," as its data container because it is a file format designed to record and playback streams of XR sensor data and supports huge file sizes. These VRS files contain streams of time-sorted records generated for each sensor, with one set of sensors per stream. Project Aria data uses VRS for features such as:"),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},"Records are structured as a succession of typed content blocks."),(0,o.mdx)("li",{parentName:"ul"},"The ",(0,o.mdx)("inlineCode",{parentName:"li"},"DataLayout")," definitions of the metadata blocks in Project Aria VRS files are open sourced under ",(0,o.mdx)("a",{parentName:"li",href:"https://github.com/facebookresearch/vrs/tree/main/vrs/oss/aria"},"vrs/vrs/oss/aria"),". These definitions provide an overview of what information can be extracted for each stream from a Project Aria sequence."),(0,o.mdx)("li",{parentName:"ul"},"Streams contain ",(0,o.mdx)("inlineCode",{parentName:"li"},"Configuration"),", ",(0,o.mdx)("inlineCode",{parentName:"li"},"State")," and ",(0,o.mdx)("inlineCode",{parentName:"li"},"Data")," records, each with a timestamp in a common time domain for the whole file."),(0,o.mdx)("li",{parentName:"ul"},"Playback is optimized for timestamp order, which is key for network streaming."),(0,o.mdx)("li",{parentName:"ul"},"Random-access playback is supported via VRS")),(0,o.mdx)("p",null,"The Aria Research Kit: Aria Data Tools provides an interface to access the data via an abstraction (an X_provider string) that allows users to iterate through all the sensor recordings."),(0,o.mdx)("p",null,"VRS is automatically installed when you install Aria Data Tools. ",(0,o.mdx)("a",{parentName:"p",href:"https://facebookresearch.github.io/vrs/"},"VRS")," is an open tool with API documentation available on Github."),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("a",{parentName:"li",href:"https://github.com/facebookresearch/vrs"},"VRS Readme")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("a",{parentName:"li",href:"https://facebookresearch.github.io/vrs/"},"VRS Documentation")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("a",{parentName:"li",href:"https://github.com/facebookresearch/vrs/tree/main/vrs"},"VRS Core Functionality"))))}m.isMDXComponent=!0}}]);